# This is a placeholder file for use with future versions
# of packaging and linting tools. Currently it serves no useful purpose

[project]
name = "cmon"
# description = "A tool for testing and documenting a system of servers and services"
version = "0.1"
authors = [
    { name = "Mike Elson", email = "mike.elson@fastmail.com" }
]
dependencies = [
	"paramiko",
	"httpx",
	"jinja2",
	"humanize",
	"psycopg2",
]
# homepage = "https://github.com/mjem/cmon"
# repository = "https://github.com/mjem/cmon"
# docs = "https://github.com/mjem/cmon/docs"
readme = "README.rst"
requires-python = ">=3.7"
# license = {text = "GPL v3"}

# [project.scripts]
# cmon = "cmon.main:main"

[project.optional-dependencies]
tests = ["pytest"]
dev = ["invoke", "pylint", "pycodestyle", "pydocstyle", "mypy"]
# isort, mcgabe
# (os) enchant, myspell, myspell-en_GB

# [build-system]
# requires = ["setuptools", "wheel"]
# build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["cmon"]#, "cmon.server", "cmon.templates"]
# package-dir = {""="cmon", "cmon.templates"="cmon/templates"}
# include-package-data = true

# [tool.setuptools.packages.find]
# namespaces = true
# where = ["cmon"]

# [tool.setuptools.package-data]
# This doesn't work as setuptools has no documented way
# to package arbitrary data files
# "cmon.3rdparty.bootstrap-5.3.0-alpha1-dist.css" = ["*.css"]


[tool.pylint.format]
# The pylint tool doesn't appear to use these sections but a future version should.
# For now the real configuration is in .pylintrc
ignore-long-lines=['^\s*(# )?<?https?://\S+>?$']
max-line-length=100
indent-string = "\t"

[tool.pylint.reports]
score = false

[tool.pylint.messages]
# disable pylint messages to avoid clashes with other tools

[tool.pycodestyle]
# bad-indentation, bare-except, line-too-long, missing-final-newline, multiple-statements
# singleton-comparison, trailing-whitespace, unnecessary-semicolon, unneeded-not
# wrong-import-position
# missing-module-docstring, missing-class-docstring, missing-function-docstring

[tool.pydocstyle]
# D107: Missing docstring in __init__
# D203: 1 blank line required before class docstring
ignore=['D107', 'D203']

# This section doesn't work; pass mypy "--implicit-optional" command line argument instead
[tool.mypy]
no_implicit_optional=false

# May not work, if not pass isort "--sl" command line argument instead
[tool.isort]
force_single_line_imports = true
# wrong-import-order

# Attempt to configure mccabe
[tool.mccabe]
min=5
# mccabe: too-many-branches
